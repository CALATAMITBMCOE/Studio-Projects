<gel:script 
 xmlns:core="jelly:core" 
    xmlns:gel="jelly:com.niku.union.gel.GELTagLibrary"
    xmlns:soap="jelly:com.niku.union.gel.SOAPTagLibrary"
    xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:soap-env="http://schemas.xmlsoap.org/soap/envelope/"	    
    xmlns:sql="jelly:sql"
    xmlns:xog="http://www.niku.com/xog"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:file="jelly:com.niku.union.gel.FileTagLibrary"
    xmlns:util="jelly:util"
    xmlns:q="http://www.niku.com/xog/Query">
	
	<core:set var="vStudioProjectID" value="${gel_objectInstanceId}"/>
	
	<core:if test="${DebugLevel &gt; 0}">
		<gel:log level="debug" message="Start Script"/>
		<gel:log level="debug" message=">>Studio Project: ${vStudioProjectID}"/> 
		<gel:log level="debug" message=">>Persisted XOG URL  : ${XOGURL}"/> 
		<gel:log level="debug" message=">>Persisted LOG Folder: ${XOGlogFolder}"/> 
		<gel:log level="debug" message=">>Persisted SessionID: ${sessionID}"/> 
		<gel:log level="debug" message=">>Persisted DebugLevel: ${DebugLevel}"/> 
	</core:if>

    <gel:setDataSource dbId="Niku"/>
	
	<sql:query escapeText="false" var="vProject">
		select SP.PROJECT_CODE, SP.PACKAGING_PATH, SP.OUT_FOLDER_PATH, SP.XOG_HOME, CI.XOG_URL, CI.XOG_USERNAME, CI.XOG_PASSWORD, CI.XOG_PORT, Case CI.SSLENABLED when 0 then 'False' else 'True' end SSLENABLED, SP.ST_INCLUDE 
		from odf_ca_stproj_project SP, odf_ca_stproj_clarity_inst CI
		Where SP.id = ${vStudioProjectID}
		AND SP.target_instance = CI.code
	</sql:query>
	<core:forEach items="${vProject.rowsByIndex}" var="row">
		<core:set var="vProjectCode">${row[0]}</core:set>
		<core:set var="vPackagingPath">${row[1]}</core:set>
		<core:set var="vOutputPath">${row[2]}</core:set>
		<core:set var="vXOGHome">${row[3]}</core:set>
		<core:set var="vServername">${row[4]}</core:set>
		<core:set var="vXOGUser">${row[5]}</core:set>
		<core:set var="vXOGPassword">${row[6]}</core:set>
		<core:set var="vXOGPort">${row[7]}</core:set>
		<core:set var="vSSL">${row[8]}</core:set>
		<core:set var="vInclude">${row[9]}</core:set>
		<core:if test="${DebugLevel &gt; 1}">
			<gel:log level="debug" message="vProjectCode  : ${vProjectCode}"/> 
			<gel:log level="debug" message="vPackagingPath: ${vPackagingPath}"/> 
			<gel:log level="debug" message="vOutputPath   : ${vOutputPath}"/> 
			<gel:log level="debug" message="vXOGHome      : ${vXOGHome}"/> 
			<gel:log level="debug" message="vServername   : ${vServername}"/> 
			<gel:log level="debug" message="vXOGUser      : ${vXOGUser}"/> 
			<gel:log level="debug" message="vXOGPassword  : ${vXOGPassword}"/> 
			<gel:log level="debug" message="vXOGPort      : ${vXOGPort}"/> 
			<gel:log level="debug" message="vSSL          : ${vSSL}"/> 
			<gel:log level="debug" message="vInclude      : ${vInclude}"/> 
		</core:if>
	</core:forEach>

	<core:set var="vFileName">${vPackagingPath}/${vProjectCode}Install.bat</core:set>
	<core:if test="${DebugLevel &gt; 0}">
		<gel:log level="debug" message="Creating File: ${vFileName}"/> 
	</core:if>
	
	<file:writeFile fileName="${vFileName}" delimiter="" embedded="0">
		<core:set var="vLine">@Echo Off</core:set>
		<file:line>
			<file:column value="${vLine}"/>
		</file:line>
		<core:set var="vLine">SET XOG_HOME=${vXOGHome}</core:set>
		<file:line>
			<file:column value="${vLine}"/>
		</file:line>
		<core:set var="vLine">SET SERVERNAME=${vServername}</core:set>
		<file:line>
			<file:column value="${vLine}"/>
		</file:line>
		<core:set var="vLine">SET PORTNUMBER=${vXOGPort}</core:set>
		<file:line>
			<file:column value="${vLine}"/>
		</file:line>
		<core:set var="vLine">SET SSLENABLED=${vSSL}</core:set>
		<file:line>
			<file:column value="${vLine}"/>
		</file:line>
		<core:set var="vLine">SET USERNAME=${vXOGUser}</core:set>
		<file:line>
			<file:column value="${vLine}"/>
		</file:line>
		<core:set var="vLine">SET PASSWORD=${vXOGPassword}</core:set>
		<file:line>
			<file:column value="${vLine}"/>
		</file:line>
		<core:set var="vLine">IF NOT EXIST ${vOutputPath} md ${vOutputPath}</core:set>
		<file:line>
			<file:column value="${vLine}"/>
		</file:line>
		
		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select count(*) from odf_ca_stproj_element where ODF_PARENT_ID = ${vStudioProjectID} and element_type = 'StaticLookup'
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vTest">${row[0]}</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vTest: ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">
				<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/01-StaticLookup_out.xml -input ${vPackagingPath}/01-StaticLookup.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>

		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select ELEMENT_ID, count(*) from odf_ca_stproj_element where ODF_PARENT_ID = ${vStudioProjectID} and element_type = 'MasterObject' group by ELEMENT_ID
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vObjCode">${row[0]}</core:set>
			<core:set var="vTest">${row[1]}</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vObjCode: ${vObjCode}"/> 
				<gel:log level="debug" message="vTest: ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">
				<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/02-Objects_${vObjCode}_out.xml -input ${vPackagingPath}/02-Objects_${vObjCode}.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>

		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select MASTER_OBJECT, count(*) from odf_ca_stproj_element where ODF_PARENT_ID = ${vStudioProjectID} and element_type = 'SubObject' group by MASTER_OBJECT
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vMaster">${row[0]}</core:set>
			<core:set var="vTest">${row[1]}</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vMaster: ${vMaster}"/> 
				<gel:log level="debug" message="vTest  : ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">
				<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/03-SubObjects_${vMaster}_out.xml -input ${vPackagingPath}/03-SubObjects_${vMaster}.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>

		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select count(*) from odf_ca_stproj_element where ODF_PARENT_ID = ${vStudioProjectID} and element_type = 'DynamicLookup'
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vTest">${row[0]}</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vTest: ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">
				<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/04-DynamicLookup_out.xml -input ${vPackagingPath}/04-DynamicLookup.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>

		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select count(*) from odf_ca_stproj_element where ODF_PARENT_ID = ${vStudioProjectID} and element_type like '%Object'
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vTest">${row[0]}</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vTest: ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">
				<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/05-Views_out.xml -input ${vPackagingPath}/05-Views.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>

		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select ELEMENT_ID, count(*) from odf_ca_stproj_element where ODF_PARENT_ID = ${vStudioProjectID} and element_type = 'StockObject' group by ELEMENT_ID
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vMaster">${row[0]}</core:set>
			<core:set var="vTest">${row[1]}</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vTest: ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">
				<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/06A-StockObject_${vMaster}_out.xml -input ${vPackagingPath}/06A-StockObject_${vMaster}.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>

		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select ELEMENT_ID, count(*) from odf_ca_stproj_element where ODF_PARENT_ID = ${vStudioProjectID} and element_type = 'StockSubObject' group by ELEMENT_ID
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vMaster">${row[0]}</core:set>
			<core:set var="vTest">${row[1]}</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vTest: ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">

			<!-- Temporary FIX For v13.3 XOG Error - eliminate first line with ?xml from file-->
				<core:set var="vLine">rem ******************************** ==========  A T T E N T I O N  ==========  ********************************</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
				<core:set var="vLine">rem A Bug in XOG 13.3 requires you to edit file 06B-StockSubObject and remove first line(?xml version) ìf present.</core:set> 
				<file:line>
					<file:column escapeText="false" value="${vLine}"/>
				</file:line>
				<!-- END Temporary FIX For v13.3 -->
			
				<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/06B-StockSubObject_${vMaster}_out.xml -input ${vPackagingPath}/06B-StockSubObject_${vMaster}.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>

		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select master_object, count(*) from odf_ca_stproj_element where ODF_PARENT_ID = ${vStudioProjectID} and element_type = 'StockObjectCustAttr' group by master_object
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vMaster">${row[0]}</core:set>
			<core:set var="vTest">${row[1]}</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vTest: ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">

			<!-- Temporary FIX For v13.3 XOG Error - eliminate first line with ?xml from file-->
			<core:set var="vLine">rem ******************************** ==========  A T T E N T I O N  ==========  ********************************</core:set>
			<file:line>
				<file:column value="${vLine}"/>
			</file:line>
			<core:set var="vLine">rem A Bug in XOG 13.3 requires you to edit file 06C-StockObjectCustomAttributes and remove first line(?xml version) ìf present.</core:set> 
			<file:line>
				<file:column value="${vLine}"/>
			</file:line>
			<!-- END Temporary FIX For v13.3 -->

			<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/06C-StockObjectCustomAttributes_${vMaster}_out.xml -input ${vPackagingPath}/06C-StockObjectCustomAttributes_${vMaster}.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>

		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select distinct E.ELEMENT_ID, decode(OV.VIEW_TYPE,'filter','list','property') VIEWTYPE, OV.partition_code, nvl(P.DEPTH,0) PARTOORDER
			from odf_ca_stproj_element E 
				inner join ODF_VIEWS OV on OV.object_code = E.element_id 
				left outer join CMN_PARTITIONS P on P.code = OV.Partition_code
			where element_type in ('StockObject','StockSubObject')
			and odf_parent_id = ${vStudioProjectID}
			and ov.view_type in ('property','filter')
			order by E.ELEMENT_ID, VIEWTYPE, PARTOORDER, OV.PARTITION_CODE
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vObjectCode">${row[0]}</core:set>
			<core:set var="vViewCode">${row[1]}</core:set>
			<core:set var="vPartitionCode">${row[2]}</core:set>
			<core:set var="vPartitionOrdr">${row[3]}</core:set>
			<core:set var="vTest">1</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vTest: ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">
				<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/06D-StockViews_${vObjectCode}_${vViewCode}_${vPartitionOrdr}-${vPartitionCode}_out.xml -input ${vPackagingPath}/06D-StockViews_${vObjectCode}_${vViewCode}_${vPartitionOrdr}-${vPartitionCode}.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>
		
		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select distinct E.ELEMENT_ID, decode(OV.VIEW_TYPE,'filter','list','property') VIEWTYPE, OV.partition_code, nvl(P.DEPTH,0) PARTOORDER
			from odf_ca_stproj_element E 
				inner join ODF_VIEWS OV on OV.object_code = E.element_id 
				left outer join CMN_PARTITIONS P on P.code = OV.Partition_code
			where element_type = 'StockObjectListView'
			and odf_parent_id = ${vStudioProjectID}
			and ov.view_type = 'filter'
			and ((e.st_elem_view_part = OV.PARTITION_CODE) or (e.st_elem_view_part is null))
			order by E.ELEMENT_ID, VIEWTYPE, PARTOORDER, OV.PARTITION_CODE
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vObjectCode">${row[0]}</core:set>
			<core:set var="vViewCode">${row[1]}</core:set>
			<core:set var="vPartitionCode">${row[2]}</core:set>
			<core:set var="vPartitionOrdr">${row[3]}</core:set>
			<core:set var="vTest">1</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vTest: ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">
				<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/06E-StockViews_${vObjectCode}_${vViewCode}_${vPartitionOrdr}-${vPartitionCode}_out.xml -input ${vPackagingPath}/06E-StockViews_${vObjectCode}_${vViewCode}_${vPartitionOrdr}-${vPartitionCode}.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>

		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select distinct E.ELEMENT_ID, decode(OV.VIEW_TYPE,'filter','list','property') VIEWTYPE, OV.partition_code, nvl(P.DEPTH,0) PARTOORDER
			from odf_ca_stproj_element E 
				inner join ODF_VIEWS OV on OV.object_code = E.element_id 
				left outer join CMN_PARTITIONS P on P.code = OV.Partition_code
			where element_type = 'StockObjectPropertiesView'
			and odf_parent_id = ${vStudioProjectID}
			and ov.view_type = 'property'
			and ((e.st_elem_view_part = OV.PARTITION_CODE) or (e.st_elem_view_part is null))
			order by E.ELEMENT_ID, VIEWTYPE, PARTOORDER, OV.PARTITION_CODE
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vObjectCode">${row[0]}</core:set>
			<core:set var="vViewCode">${row[1]}</core:set>
			<core:set var="vPartitionCode">${row[2]}</core:set>
			<core:set var="vPartitionOrdr">${row[3]}</core:set>
			<core:set var="vTest">1</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vTest: ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">
				<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/06E-StockViews_${vObjectCode}_${vViewCode}_${vPartitionOrdr}-${vPartitionCode}_out.xml -input ${vPackagingPath}/06E-StockViews_${vObjectCode}_${vViewCode}_${vPartitionOrdr}-${vPartitionCode}.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>

		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select count(*) from odf_ca_stproj_element where ODF_PARENT_ID = ${vStudioProjectID} and element_type = 'Process'
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vTest">${row[0]}</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vTest: ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">
				<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/07-Processes_out.xml -input ${vPackagingPath}/07-Processes.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>

		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select count(*) from odf_ca_stproj_element where ODF_PARENT_ID = ${vStudioProjectID} and element_type = 'Query'
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vTest">${row[0]}</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vTest: ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">
				<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/08-Queries_out.xml -input ${vPackagingPath}/08-Queries.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>

		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select count(*) from odf_ca_stproj_element where ODF_PARENT_ID = ${vStudioProjectID} and element_type = 'Portlet'
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vTest">${row[0]}</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vTest: ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">
				<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/09-Portlets_out.xml -input ${vPackagingPath}/09-Portlets.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>

		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select count(*) from odf_ca_stproj_element where ODF_PARENT_ID = ${vStudioProjectID} and element_type = 'Page'
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vTest">${row[0]}</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vTest: ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">
				<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/10-Pages_out.xml -input ${vPackagingPath}/10-Pages.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>

		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select element_id, count(*) from odf_ca_stproj_element where ODF_PARENT_ID = ${vStudioProjectID} and element_type = 'Group' group by element_id
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vGroupCode">${row[0]}</core:set>
			<core:set var="vTest">${row[1]}</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vTest: ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">
				<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/11-Groups_${vGroupCode}_out.xml -input ${vPackagingPath}/11-Groups_${vGroupCode}.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>

		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select count(*) from odf_ca_stproj_element where ODF_PARENT_ID = ${vStudioProjectID} and element_type = 'Menu'
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vTest">${row[0]}</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vTest: ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">
			
				<!-- Temporary FIX For v13.3 XOG Error - eliminate first line with ?xml from file-->
				<core:set var="vLine">rem ******************************** ==========  A T T E N T I O N  ==========  ********************************</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
				<core:set var="vLine">rem A Bug in XOG 13.3 requires you to edit file 12-Menu and remove first line(?xml version) ìf present.</core:set> 
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
				<!-- END Temporary FIX For v13.3 -->
				
				<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/12-Menu_out.xml -input ${vPackagingPath}/12-Menu.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>

		<core:set var="vTest">0</core:set>
		<sql:query var="vCount">
			select data_object_type, object_order, count(*) from odf_ca_stproj_data where ODF_PARENT_ID = ${vStudioProjectID} and data_type = 'Seed'
			group by data_object_type, object_order
			order by object_order, data_object_type
		</sql:query>
		<core:forEach items="${vCount.rowsByIndex}" var="row">
			<core:set var="vObject">${row[0]}</core:set>
			<core:set var="vOrder">${row[1]}</core:set>
			<core:set var="vTest">${row[2]}</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="debug" message="vObject: ${vObject}  vOrder: ${vOrder}   vTest: ${vTest}"/> 
			</core:if>
			<core:if test="${vTest &gt; 0}">
				<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/60-SeedData_${vObject}_${vOrder}_out.xml -input ${vPackagingPath}/60-SeedData_${vObject}_${vOrder}.xml</core:set>
				<file:line>
					<file:column value="${vLine}"/>
				</file:line>
			</core:if>
		</core:forEach>
		
		<core:if test="${vInclude &gt; 0}">
			<core:set var="vLine">Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/99-StudioProject_out.xml -input ${vPackagingPath}/99-StudioProject.xml</core:set>
			<file:line>
				<file:column value="${vLine}"/>
			</file:line>
		</core:if>

		<core:if test="${vInclude == 0}">
			<core:set var="vLine">rem Call %XOG_HOME%/xog -servername %SERVERNAME% -portnumber %PORTNUMBER% -sslenabled %SSLENABLED%  -username %USERNAME% -password %PASSWORD% -output ${vOutputPath}/99-StudioProject_out.xml -input ${vPackagingPath}/99-StudioProject.xml</core:set>
			<file:line>
				<file:column value="${vLine}"/>
			</file:line>
		</core:if>

		<core:set var="vLine">pause</core:set>
		<file:line>
			<file:column value="${vLine}"/>
		</file:line>
	</file:writeFile>

</gel:script>