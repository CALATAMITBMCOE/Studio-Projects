<gel:script 
 xmlns:core="jelly:core" 
    xmlns:gel="jelly:com.niku.union.gel.GELTagLibrary"
    xmlns:soap="jelly:com.niku.union.gel.SOAPTagLibrary"
    xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:soap-env="http://schemas.xmlsoap.org/soap/envelope/"	    
    xmlns:sql="jelly:sql"
    xmlns:xog="http://www.niku.com/xog"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:file="jelly:com.niku.union.gel.FileTagLibrary"
    xmlns:util="jelly:util"
    xmlns:q="http://www.niku.com/xog/Query">
	
	<core:set var="vStudioProjectID" value="${gel_objectInstanceId}"/>
	
	<core:if test="${DebugLevel &gt; 0}">
		<gel:log level="debug" message="Start Script"/>
		<gel:log level="debug" message=">>Studio Project: ${vStudioProjectID}"/> 
		<gel:log level="debug" message=">>Persisted XOG URL   	: ${XOGURL}"/> 
		<gel:log level="debug" message=">>Persisted LOG Folder	: ${XOGlogFolder}"/> 
		<gel:log level="debug" message=">>Persisted WEB Folder	: ${XOGwebFolder}"/> 
		<gel:log level="debug" message=">>Persisted WEB Path	: ${XOGwebPath}"/> 
		<gel:log level="debug" message=">>Persisted DB Vendor	: ${dbVendor}"/> 
		<gel:log level="debug" message=">>Persisted SessionID 	: ${sessionID}"/> 
		<gel:log level="debug" message=">>Persisted DebugLevel	: ${DebugLevel}"/> 
	</core:if>

    <gel:setDataSource dbId="Niku"/>
	
	<sql:query escapeText="false" var="vProject">
		select SP.PROJECT_CODE, SP.PACKAGING_PATH, SP.ST_EXPORT
		from odf_ca_stproj_project SP
		Where SP.id = ${vStudioProjectID}
	</sql:query>
	<core:forEach items="${vProject.rowsByIndex}" var="row">
		<core:set var="vProjectCode">${row[0]}</core:set>
		<core:set var="vPackagingPath">${row[1]}</core:set>
		<core:set var="vExport">${row[2]}</core:set>
		<core:if test="${DebugLevel &gt; 1}">
			<gel:log level="debug" message="vProjectCode  : ${vProjectCode}"/> 
			<gel:log level="debug" message="vPackagingPath: ${vPackagingPath}"/> 
			<gel:log level="debug" message="vExport       : ${vExport}"/> 
		</core:if>
	</core:forEach>

	<core:set var="vFileName">${vPackagingPath}/${vProjectCode}-build.properties</core:set>
	<core:if test="${DebugLevel &gt; 0}">
		<gel:log level="debug" message="Creating File: ${vFileName}"/> 
	</core:if>

	<core:catch var="err">

	<core:if test="${vFileName != null}">
		<util:available file="${vFileName}" >
			<util:properties escapeText="false" file="${vFileName}" var="vZipProperties" />
			<core:if test="${DebugLevel &gt; 0}">
				<gel:log level="debug" message="Loaded: ${vFileName}"/> 
			</core:if>
		</util:available>
	</core:if>

	<core:if test="${DebugLevel &gt; 0}">
		<gel:log level="debug" message="Building ZIP file: ${vZipProperties.getProperty('zip_file_name')}"/> 
		<gel:log level="debug" message="with these contents: ${vZipProperties.getProperty('zip_file_list')}"/> 
	</core:if>

	<core:new className="java.io.FileOutputStream" var="fos" >
		<core:arg type="java.lang.String" value="${vZipProperties.getProperty('zip_file_name')}" />
	</core:new>

	<core:new className="java.util.zip.ZipOutputStream" var="out" >
		<core:arg type="java.io.FileOutputStream" value="${fos}" />
	</core:new>

	<core:forEach items="${vZipProperties.getProperty('zip_file_list')}" var="thisFile">

		<util:file name="${thisFile}" var="filesize" />
	
		<core:set var="filesize" value="${filesize.length()}" />

		<core:if test="${DebugLevel &gt; 0}">
			<gel:log level="debug" message="Processing file: ${thisFile} (${filesize})"/> 
		</core:if>

		<core:new className="java.io.ByteArrayOutputStream" var="byteArrayOutputStream">
			<core:arg type="java.lang.Integer" value="1024" />
		</core:new>
	
		<core:forEach begin="1" end="1024" indexVar="counter">
			<core:set var="dummy" value="${byteArrayOutputStream.write(0)}" />
		</core:forEach>
	
		<core:set var="buffy" value="${byteArrayOutputStream.toByteArray()}" />
		
		<core:new className="java.io.FileInputStream" var="fis" >
			<core:arg type="java.lang.String" value="${thisFile}" />
		</core:new>
	
		<core:new className="java.util.zip.ZipEntry" var="ze" >
			<core:arg type="java.lang.String" value="${thisFile}" />
		</core:new>
	
		<core:set var="void" value="${out.putNextEntry(ze)}" />
	
		<core:while test="${fis.available() > 0}">
			<core:set var="counter" value="${fis.read(buffy)}" />
			<core:set var="dummy" value="${out.write(buffy, 0, counter)}" />
		</core:while>
		<core:set var="void" value="${out.closeEntry()}" />
		<core:set var="void" value="${fis.close()}" />
		
	</core:forEach>

	<core:set var="void" value="${out.close()}" />

	</core:catch>

	<core:if test="${err != null}">
		<gel:log level="ERROR" message="EXCEPTION: ${err.getMessage()}"/> 
	</core:if>

	<core:if test="${err == null}">
		<core:set var="vZIPURL" value="/niku/StudioPackages/${vProjectCode}/${vProjectCode}.zip"/>
		<sql:update>
			UPDATE ODF_CA_STPROJ_PROJECT SET package_url='${vZIPURL}'
			Where id = ${vStudioProjectID}
		</sql:update>
	</core:if>
	
</gel:script>
