<gel:script 
 xmlns:core="jelly:core" 
    xmlns:gel="jelly:com.niku.union.gel.GELTagLibrary"
    xmlns:soap="jelly:com.niku.union.gel.SOAPTagLibrary"
    xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:soap-env="http://schemas.xmlsoap.org/soap/envelope/"	    
    xmlns:sql="jelly:sql"
    xmlns:xog="http://www.niku.com/xog"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:file="jelly:com.niku.union.gel.FileTagLibrary"
    xmlns:util="jelly:util"
    xmlns:q="http://www.niku.com/xog/Query">
	
   	<!--============================================================-->
	<!-- Package: Studio Projects Packaging 2.0						-->
	<!-- Process: Studio Projects Translation Upload				-->
	<!-- Step	: Upload Translations								-->
	<!-- Action	: Upload Translations								-->
   	<!--============================================================-->
	<!-- Upload Translations Spreadsheet to Server Folder			-->
   	<!--============================================================-->

	<core:set var="vStudioProjectID" value="${gel_objectInstanceId}"/>
    <gel:setDataSource dbId="Niku"/>
	
	<core:if test="${DebugLevel &gt; 0}">
		<gel:log level="INFO" message="Start Script"/>
		<gel:log level="INFO" message=">>Studio Project: ${vStudioProjectID}"/> 
		<gel:log level="INFO" message=">>Persisted XOG URL   	: ${XOGURL}"/> 
		<gel:log level="INFO" message=">>Persisted LOG Folder	: ${XOGlogFolder}"/> 
		<gel:log level="INFO" message=">>Persisted XOG Endpoint: ${XOGEndPoint}"/> 
		<gel:log level="INFO" message=">>Persisted WEB Folder	: ${XOGwebFolder}"/> 
		<gel:log level="INFO" message=">>Persisted WEB Path	: ${XOGwebPath}"/> 
		<gel:log level="INFO" message=">>Persisted DB Vendor	: ${dbVendor}"/> 
		<gel:log level="INFO" message=">>Persisted SessionID 	: ${sessionID}"/> 
		<gel:log level="INFO" message=">>Persisted DebugLevel	: ${DebugLevel}"/> 
		<gel:log level="INFO" message=">>Publish Folder		: ${publishFolder}"/> 
	</core:if>

	<core:set var="vFound">0</core:set>
	
	<sql:query escapeText="false" var="vProject">
		select INITIALS, CODE, PARTITION_CODE, NAME, PROJECT_CODE, XLAT_SPREADSHEET, PUBLISH, PACKAGING_PATH
		from odf_ca_stproj_project
		Where id = ${vStudioProjectID}
	</sql:query>
	<core:forEach items="${vProject.rowsByIndex}" var="row">
		<core:set var="vProjectInitials">${row[0]}</core:set>
		<core:set var="vProjectCode">${row[1]}</core:set>
		<core:set var="vStudio_Part">${row[2]}</core:set>
		<core:set var="vStudioProjectName">${row[3]}</core:set>
		<core:set var="vProjectCodeName">${row[4]}</core:set>
		<core:set var="vSpreadsheet">${row[5]}</core:set>
		<core:set var="vPublish">${row[6]}</core:set>
		<core:set var="vFolder">${row[7]}</core:set>
		<core:if test="${DebugLevel &gt; 1}">
			<gel:log level="INFO" message="Project ${vProjectCode} will upload spreadsheet ${vSpreadsheet}. Packaging Folder=${vFolder}. Publish (${vPublish}) Folder=${publishFolder}."/> 
		</core:if>
		<core:set var="vFound">1</core:set>
	</core:forEach>
	
	<core:if test="${vFound &gt; 0}">
		<core:set var="vSpreadsheetPublish">${vFolder}/${vSpreadsheet}</core:set>		
		<core:if test="${vPublish == 1}">
			<core:set var="vSpreadsheetPublish">${publishFolder}/${vSpreadsheet}</core:set>		
		</core:if>
			
		<core:set var="regex">[,]</core:set>
		<core:new className="java.io.FileInputStream" var="vSheet">
			<core:arg type="java.lang.String" value="${vSpreadsheetPublish}" />
		</core:new>

		<core:new className="java.io.InputStreamReader" var="vSheetISR">
			<core:arg type="java.io.InputStream" value="${vSheet}" />
			<core:arg type="java.lang.String" value="ISO8859_1" />
		</core:new>

		<core:new className="java.io.BufferedReader" var="vData">
			<core:arg type="java.io.InputStreamReader" value="${vSheetISR}" />
		</core:new>

		<core:if test="${DebugLevel &gt; 1}">
			<gel:log level="INFO" message="Encoding: ${vSheetISR.getEncoding()}"/>
		</core:if>

		<core:set var="vDataRow" value="${vData.readLine()}" />

		<core:while test="${vDataRow != null}">

			<core:set var="vDataRow" value="${vDataRow.split(regex)}" />

			<core:if test="${DebugLevel &gt; 2}">
				<gel:log level="INFO" message="${vDataRow[0]}, ${vDataRow[1]}, ${vDataRow[2]}, ${vDataRow[3]}, ${vDataRow[4]}, ${vDataRow[5]}, ${vDataRow[6]}, ${vDataRow[7]}"/>
			</core:if>

			<core:set var="vCaptionIntID">${vDataRow[0]}</core:set>
			<core:set var="vCaptionName">${vDataRow[6]}</core:set>
			<core:set var="vCaptionDesc">${vDataRow[7]}</core:set>
			<core:if test="${DebugLevel &gt; 1}">
				<gel:log level="INFO" message="vCaptionIntID:${vCaptionIntID}. vCaptionName:${vCaptionName}. vCaptionDesc:${vCaptionDesc}."/>
			</core:if>

			<core:if test="${(vCaptionIntID != 'InternalID') and (vCaptionIntID !='')}">
				<sql:update>
					update odf_ca_stproj_elem_xlat
					set caption_name = '${vCaptionName}', caption_descr = '${vCaptionDesc}', last_updated_date = sysdate
					where id = ${vCaptionIntID}
				</sql:update>	
			</core:if>
			
			<core:set var="vDataRow" value="${vData.readLine()}" />
			
		</core:while>
		<core:invoke method="close" on="${vData}" var="vOut"/>		
		<core:invoke method="close" on="${vSheetISR}" var="vOut"/>		
		<core:invoke method="close" on="${vSheet}" var="vOut"/>		
	</core:if>	
</gel:script>